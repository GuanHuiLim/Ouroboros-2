#version 460

layout (local_size_x = 16, local_size_y = 16) in;
layout (set=0, binding = 0)  uniform sampler basicSampler;
layout (set=0, binding = 1/*,rgba16f*/)  uniform texture2D inputImage;
layout (set=0, binding = 2,r11f_g11f_b10f) uniform  image2D resultImage;

void main()
{	
    // Note: Load operations from any texel that is outside of the boundaries of the bound image will return all zeros.
	vec2 srcSz = vec2(textureSize(sampler2D(inputImage,basicSampler),0));
	vec4 inImg = texture(sampler2D(inputImage,basicSampler), (vec2(gl_GlobalInvocationID.xy)+0.5)/srcSz );
	vec4 res = imageLoad(resultImage, ivec2(gl_GlobalInvocationID.xy) );

	res = inImg + res;
	res.a = 1.0;

    //Note: Store operations to any texel that is outside the boundaries of the bound image will do nothing.
	imageStore(resultImage, ivec2(gl_GlobalInvocationID.xy), res);
}
