# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'Ouroboros.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'
  #VULKAN_SDK: C:/VulkanSDK/1.2.148.0
  VULKAN_VERSION: 1.3.224.1

steps:
- task: CmdLine@2
  inputs:
    script: 'git clone https://github.com/GuanHuiLim/VulkanSDK.git'
- task: CmdLine@2
  inputs:
    script: 'dir /a:d'
- task: CmdLine@2
  inputs:
    script: 'setx /M "%VULKAN_SDK%;%CD%/VulkanSDK"'
- task: CmdLine@2
  inputs:
    script: 'setx /M "%VK_SDK_PATH%;%CD%/VulkanSDK"'

#- task: Bash@3
#  inputs:
#    targetType: 'inline'
#    script: |
#      set -ex
#                curl -L -o "VulkanSDK-1.2.148.0-Installer.exe" "https://griddyvulkan.s3.amazonaws.com/VulkanSDK-1.2.148.0-Installer.exe"
#                # This makes sure we wait for the vulkan SDK to complete installation
#                _=$(echo "VulkanSDK-1.2.148.0-Installer.exe /S" | cmd)
#                curl -L -o "VulkanRT-1.2.148.0-Components.zip" "https://griddyvulkan.s3.amazonaws.com/vulkan-1.2.148.0-runtime-components.zip"
#                unzip VulkanRT-1.2.148.0-Components.zip
#                cp VulkanRT-1.2.148.0-Components/x64/vulkaninfo.exe $VULKAN_SDK/Bin
#                cp VulkanRT-1.2.148.0-Components/x64/vulkan-1.dll $VULKAN_SDK/Bin
- task: BatchScript@1
  inputs:
    filename: 'scripts/Windows-GenerateProject.bat'
- task: MSBuild@1
  inputs:
    solution: 'Ouroboros.sln'
    maximumCpuCount: true
    msbuildArchitecture: 'x64'
    platform: 'Editor'
    configuration: 'Debug'
